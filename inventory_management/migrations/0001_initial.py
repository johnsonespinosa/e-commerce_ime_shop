# Generated by Django 5.0.6 on 2024-05-19 18:52

import django.db.models.deletion
import django_extensions.db.fields
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('url', models.URLField(blank=True, help_text='URL de la tienda online del proveedor', null=True)),
                ('supplier_type', models.CharField(blank=True, help_text='Tipo de proveedor (por ejemplo, mayorista, minorista)', max_length=100, null=True)),
                ('description', models.TextField(blank=True, help_text='Breve descripción del proveedor.', null=True)),
                ('image', models.ImageField(blank=True, help_text='Imagen del proveedor', null=True, upload_to='suppliers/')),
            ],
            options={
                'verbose_name': 'proveedor',
                'verbose_name_plural': 'proveedores',
                'db_table': 'Suppliers',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='inventory_management.category')),
            ],
            options={
                'verbose_name': 'categoría',
                'verbose_name_plural': 'categorías',
                'db_table': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='Descripción del Producto')),
                ('purchase_price', models.DecimalField(decimal_places=2, default=0.0, help_text='Precio de compra del producto', max_digits=10)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Precio de venta del producto', max_digits=10)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name', unique=True)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('category', models.ForeignKey(help_text='Categoria del producto', on_delete=django.db.models.deletion.RESTRICT, related_name='products', to='inventory_management.category')),
                ('supplier', models.ForeignKey(help_text='Proveedor del producto', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='inventory_management.supplier')),
            ],
            options={
                'verbose_name': 'producto',
                'verbose_name_plural': 'productos',
                'db_table': 'Products',
                'ordering': ['registration_date', 'category'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_stock', models.PositiveIntegerField(default=0, help_text='Stock disponible del producto')),
                ('active', models.BooleanField(default=True, help_text='Indica si el producto está activo o no.')),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='inventory_management.product')),
            ],
            options={
                'verbose_name': 'inventario',
                'verbose_name_plural': 'inventarios',
                'db_table': 'Inventories',
            },
        ),
        migrations.CreateModel(
            name='ProductIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('por defecto', 'Por defecto'), ('dañado', 'Dañado')], default='por defecto', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Detalles adicionales sobre el problema', null=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='issue', to='inventory_management.product')),
            ],
            options={
                'verbose_name': 'baja',
                'verbose_name_plural': 'bajas',
                'db_table': 'ProductIssues',
            },
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('talla', 'Talla'), ('color', 'Color')], default='talla', max_length=120)),
                ('name', models.CharField(help_text='Nombre de la variación', max_length=120)),
                ('state', models.CharField(choices=[('disponible', 'Disponible'), ('no disponible', 'No disponible'), ('eliminado', 'Eliminado')], default='disponible', max_length=120)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='inventory_management.product')),
            ],
            options={
                'verbose_name': 'variación',
                'verbose_name_plural': 'variaciones',
                'db_table': 'Variations',
            },
        ),
    ]
